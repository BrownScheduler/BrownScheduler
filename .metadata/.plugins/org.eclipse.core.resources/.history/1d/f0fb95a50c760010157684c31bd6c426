package plugin1;

import java.util.ArrayList;

public class ConstraintHandler {

	private ArrayList<Team> _teams;
	private ArrayList<Judge> _judges;
	private boolean _hasIssue;
	
	private class TeamComparer implements Comparable{
		Team _t;
		public TeamComparer(Team t){
			_t = t;
		}

		@Override
		public int compareTo(Object arg0) {
			if(arg0.getClass() == this.getClass()){
				TeamComparer other = (TeamComparer)arg0;
				return this._t.getWins() - other._t.getWins();
			}
			return -2;
		}
	}
	public ConstraintHandler(ArrayList<Team> teams, ArrayList<Judge> judges){
		this._teams = new ArrayList<Team>(teams);
		this._judges = new ArrayList<Judge>(judges);
	}
	
	private void sortTeamsByWins(){
		
	}
	
	private ArrayList<MyPairing> judgeLessPairings(){
		
		ArrayList<MyPairing> pairs = new ArrayList<MyPairing>();
		
		return null;
	}
	
	public MyRound createNewRound(){
		return null;
	}
	
	public boolean enoughJudges(){
		return _judges.size() >= _teams.size() / 2;
	}
}
